{#
	To build your Field's set of code blocks, create a macro
	using the convension "cs_" followed by your field type
	as Craft calls it. Example: cs_PlainText

	Accept an argument of "data" to the macro because that is
	what's passed to it later in the template. If you want to
	see what the data hash looks like you can use Twig's
	{{ dump(data) }} tag.

	Within your macro you'll be calling another macro called
	codeBlock() which takes 3 arguments. The first 2 are required
	and they are the "Heading/Title" of the code snippet followed
	by the string of code itself.

	Creating the string of code is unique, so review the sample below
	to see what's going on. Use data.sampleTag for the tag that is
	currently in the context. For code indentation use
	data.whitespace to keep things consistent. For multiple indentions
	you concatenate the whitespace like so: data.whitespace ~ data.whitespace

	The last arguement is a string that serves as extra context text
	that will appear below the Headling/Title but above the code
	snippet. The string is parsed through markdown.

#}

{%- macro cs_YourFieldType(data) %}

	<div class="extra">
		<p>You can setup extra info below your snippets.</p>
	</div>

	{{ _self.codeBlock('Field name', '
		{{ ' ~ data.sampleTag ~ ' }}'
	), 'This is an example of code-block specific additional text if you need to prefix the sample code with anything.'}}


	{{ _self.codeBlock('"If exists" conditional', '
		{% if ' ~ data.sampleTag ~ '|length %} ... {% endif %}'
	)}}

	<div class="extra">
		<p>Or you can setup extra info below your snippets.</p>
	</div>

{% endmacro -%}